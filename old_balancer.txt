# "Application Load Balancer" (ALB) configuration:
resource "aws_lb" "app_lb" {
  name               = "app-lb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.ecs_sg.id]
  subnets            = [data.aws_subnet.web.id, data.aws_subnet.alb.id]
}

# "Target Group" for "app-api":
resource "aws_lb_target_group" "app_api" {
  name        = "app-api-tg"
  port        = 3000
  protocol    = "HTTP"
  vpc_id      = data.aws_vpc.main.id
  target_type = "ip"
  health_check {
    path = "/"
    port = "traffic-port"
  }
}

# "Target Group" for "app-web":
resource "aws_lb_target_group" "app_web" {
  name        = "app-web-tg"
  port        = 4000
  protocol    = "HTTP"
  vpc_id      = data.aws_vpc.main.id
  target_type = "ip"
  health_check {
    path = "/"
    port = "traffic-port"
  }
}

# "Listener" for "Load Balancer" and redirect "HTTP" to "HTTPS":
resource "aws_lb_listener" "lb_listener" {
  load_balancer_arn = aws_lb.app_lb.arn
  port              = "80"
  protocol          = "HTTP"

  default_action {
    type = "redirect"

    redirect {
      port        = "443"
      protocol    = "HTTPS"
      status_code = "HTTP_301"
    }
  }
}

# "Listener Rule" for "app-api":
resource "aws_lb_listener_rule" "app_api" {
  listener_arn = aws_lb_listener.lb_listener.arn
  priority     = 100

  action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.app_api.arn
  }

  condition {
    path_pattern {
      values = ["/api/*"]
    }
  }
}

# "Listener Rule" for "app-web":
resource "aws_lb_listener_rule" "app_web" {
  listener_arn = aws_lb_listener.lb_listener.arn
  priority     = 90

  action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.app_web.arn
  }

  condition {
    path_pattern {
      values = ["/web/*"]
    }
  }
}